---
layout: post
title: 'Office Space: Trabajo Basura (II: o&#237;r gilipolleces)'
date: '2005-12-17T00:00:00+00:00'
permalink: 2005/12/17/office-space-trabajo-basura-ii-or-gilipolleces/
---
<a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://www.madison.com/images/articles/tct/2005/07/26/17582_thumb.jpg"><img style="float:right; margin:0 0 10px 10px;cursor:pointer; cursor:hand;width: 120px;" src="http://www.madison.com/images/articles/tct/2005/07/26/17582_thumb.jpg" border="0" alt="" /></a><br /><br />Un amigo me ha enviado un mail con un art&#237;culo buen&#237;ssimo. Brutal. A&#250;n estoy descojon&#225;ndome.<br /><br />Ah&#237; va:<br /><blockquote><br />&#191;Cu&#225;l es la parte m&#225;s dif&#237;cil del trabajo de un desarrollador de software? &#191;La arquitectura, el an&#225;lisis funcional, el t&#233;cnico, la programaci&#243;n?<br /><br />No. La parte dura de verdad es tener que o&#237;r gilipolleces.<br /><span class="fullpost"><br />Uno recibe un mail del IT manager, ese individuo que seg&#250;n curr&#237;culum ha "colaborado en la conceptualizaci&#243;n de proyectos de convergencia" y ha sido "director de expansi&#243;n de estrategias de cuarta generaci&#243;n", y cuyo trabajo consiste en reenviar los emails de los clientes a los t&#233;cnicos y viceversa, y leer cosas en internet para tener algo que decir (con Google y un par de reglas de outlook ya se pod&#237;a ahorrar la empresa 80.000 euros al a&#241;o). El mail lleva por subject "Brainstorming". Ah&#237; ya est&#225;s bien jodido.<br /><br />El "brainstorming" o "tormenta de cerebros" es (o deber&#237;a ser) la reuni&#243;n en la que todos aportan su talento y experiencia para encontrar soluciones &#243;ptimas a problemas. La realidad es que en la tormenta de cerebros, el manager suele poner la tormenta y tu tienes que poner el cerebro. Y en la tormenta, como en el r&#237;o revuelto, la ganancia es para los pescadores. Tu piensas, dise&#241;as y solucionas, que para algo quer&#237;as ser ingeniero. El se apunta el gol, que para algo hizo un master en "strategy business janderklander".<br /><br />As&#237; que uno llega a la sala de reuniones con la mosca detr&#225;s de la oreja. Ah&#237; est&#225; &#233;l, con el port&#225;til, la taza de caf&#233;, y un mont&#243;n de papeles (normalmente emails de los clientes con sus requisitos, es decir el problema en s&#237; mismo, y ni un solo folio extra que indique que se ha dedicado algo de tiempo a solucionar nada).<br /><br />Ya sabes a lo que te expones una vez m&#225;s. Te van a preguntar el consabido "y ahora que hago" pero sin que se note. De soslayo. Como si tu fueras imb&#233;cil. Pero no queda ah&#237; la cosa: vas a ser el conejillo de indias con el que poner a prueba los &#250;ltimos discursitos aprendidos en los foros o "cookbooks", para que los valides o rechaces, los corrijas, y en definitiva ayudes a perfilar esa superficial sabidur&#237;a, ese "arte de aparentar tener raz&#243;n" (v&#233;ase Schopenhauer) con la que estos individuos justifican sus desorbitados salarios ante la directiva (que normalmente no suele saber distinguir una churra de una merina).<br /><br />As&#237; que te lo tomas como algo personal. Se trata de dejar claro que:<br /><br />A) Una churra es una churra y una merina es una merina, es decir, una idea es una idea y una gilipollez es una gilipollez, y uno sabe distinguirlas.<br /><br />B) Se puede hacer demagogia hablando del sexo de los &#225;ngeles o quiz&#225;s de pintura abstracta, no de software.<br /><br />C) no se aprende en un foro en una hora lo que le ha costado a uno varios a&#241;itos de carrera, otros cuantos de trabajo, mucho caf&#233; y muchas horas extras.<br /><br />D) Un in&#250;til con un libro no es un ingeniero.<br /><br />E) Un master, una corbata y una PDA hacen juego, pero no proporcionan sentido com&#250;n al que carece de &#233;l.<br /><br />Total, que empieza el circo. Abr&#243;chense los cinturones. Af&#233;rrese uno con fuerza a sus principios, porque le van a aplicar el m&#233;todo Ludovico (v&#233;ase La Naranja Mec&#225;nica). Le van a inmovilizar en una silla, a administrar una droga, a colocar unos soportes en los p&#225;rpados, y le van a obligar a visionar dos horas de Power Point. Le van a someter a uno a espantosas torturas psicol&#243;gicas con el doble objetivo de sacarle informaci&#243;n, y a la vez convencerle de realidades alternativas.<br /><br />A continuaci&#243;n reproduzco fragmentos reales (palabra de honor) de reuniones con mi actual IT manager acerca de varios proyectos Java y VB en los que "hemos" trabajado.<br /><br />Perla 1: Hibernate<br /><br />[manager] &#191;Qu&#233; utilizamos para la capa de datos?<br /><br />[yo] Usemos Hibernate<br /><br />[manager] Es mejor usar Entity Beans<br /><br />[yo] &#191;Por qu&#233;?<br /><br />[manager] Entity Beans son J2EE est&#225;ndar, y adem&#225;s est&#225;n en un pool, Hibernate no tiene pool as&#237; que va mas lento.<br /><br />Cuando quise explicarle la burrada que hab&#237;a soltado, eran tantas las ideas que se me vinieron a la cabeza de golpe que sufr&#237; un shock y tuve que ir a por un vaso de agua. Creo que esto es una t&#233;cnica deliberada de argumentaci&#243;n, que deber&#237;a denominarse "tan gorda es la burrada que no se puede rebatir". Si alguien dice que "dos y dos son cinco", se puede argumentar que son cuatro. Pero si alguien dice que "dos y dos son una constelaci&#243;n cercana a Alfa-Centauri", s&#243;lo se puede rebatir "&#191;pero de qu&#233; est&#225;s hablando?", y te pueden replicar "C&#243;mo se nota que no has hecho un Master Janderklander".<br /><br />Perla 2: Easy Upgrade<br /><br />Aqu&#237; est&#225;bamos reunidos con unos clientes americanos a los que les hab&#237;amos vendido una aplicaci&#243;n (por llamar de alguna manera a ese desastre programado por un "Senior con 10 a&#241;os de experiencia" y que yo tuve que mantener posteriormente). El proceso de instalaci&#243;n consist&#237;a en descomprimir un ZIP en el disco duro y luego ejecutar un Setup.exe (no funcionaba instalando desde CD). El zip inclu&#237;a los ficheros de la base de datos. Cada vez que les d&#225;bamos una nueva versi&#243;n, si no quer&#237;an perder los datos anteriores ten&#237;an que renombrar la base de datos antigua, instalar la versi&#243;n nueva completa (la base de datos nueva hab&#237;a que instalarla tambi&#233;n forzosamente, porque parte de la l&#243;gica y los recursos de la aplicaci&#243;n resid&#237;an en ella -no me pregunten por qu&#233;, preg&#250;ntenle al "senior"-), y luego importar algunas tablas mediante scripts (me cost&#243; una semana que el t&#233;cnico de la franquicia japonesa lo realizara correctamente).<br /><br />[cliente] &#191;No podr&#237;ais simplificar el proceso de instalaci&#243;n?<br /><br />[manager] Si, vamos a crear un proceso de instalaci&#243;n que al inicio haga un diff como en Source Safe e instale s&#243;lo lo que se ha modificado o a&#241;adido.<br /><br />Me qued&#233; pensando si este hombre sabr&#237;a que el c&#243;digo fuente se compila.<br /><br />Perla 3: Interfaces m&#225;gicos<br /><br />En esta reuni&#243;n me estaba pidiendo que dise&#241;ase un portal (una especie de carrito de la compra con los servicios de la empresa), y que para ahorrar tiempo nos atuvi&#233;semos s&#243;lo a las necesidades y especificaciones del primer cliente al que le hab&#237;amos vendido la moto.<br /><br />[yo] Pero, si creo el portal espec&#237;ficamente para un cliente, no vamos a poder reutilizar el c&#243;digo. &#191;Quieres que dise&#241;e la l&#243;gica de negocio de forma gen&#233;rica, aunque me lleve mas tiempo?<br /><br />[manager] No, no tenemos tiempo.<br /><br />[yo] Pues cuando tengamos un segundo cliente, vamos a tener que hacerle otro portal diferente<br /><br />[manager] No, reutilizamos lo que hagamos ahora<br /><br />[yo] Entonces, lo hago gen&#233;rico, &#191;no? Mas tiempo?<br /><br />[manager] No, hazlo espec&#237;fico, pero teniendo en cuenta que lo vamos a reutilizar<br /><br />[yo] A ver, expl&#237;came con qu&#233; t&#233;cnica creo algo r&#225;pido y especifico pero reutilizable<br /><br />[manager] Simplemente, mant&#233;n tus interfaces limpios<br /><br />Me pregunt&#233; si no existir&#237;a un "Mr.Proper design pattern". Luego intent&#233; que me aclarase c&#243;mo se hace una l&#243;gica espec&#237;fica que implemente un interfaz v&#225;lido para todo el mundo, y que si consegu&#237;amos el milagro (algo as&#237; como definir un est&#225;ndar tipo JDBC y crear diferentes drivers), al final &#237;bamos a reutilizar nada m&#225;s que el interfaz (&#191;media hora de trabajo?) as&#237; que est&#225;bamos en las mismas. Su discurso de respuesta es irreproducible.<br /><br />Perla 4: Override autoincremental keys<br /><br />&#201;sta vez se trataba de dise&#241;ar una l&#243;gica de negocio transaccional que operaba sobre dos sistemas diferentes, un workflow y un software de presupuestos (ambos con su API). Hab&#237;a que relacionar ambos de forma que cuando un cliente solicitase un presupuesto, se crease una tarea nueva en el workflow y un presupuesto nuevo asociado a ella.<br /><br />[yo] Pues tenemos que crear un m&#233;todo que empiece una transacci&#243;n, a&#241;ada una tarea al workflow, se quede con el ID, luego a&#241;ada un presupuesto, se quede con el ID, guarde la relaci&#243;n entre ambos en una BD, y haga "commit"<br /><br />[manager] Para ahorrar tiempo vamos a hacer que el ID de la tarea y el ID del presupuesto sean siempre iguales, as&#237; no tenemos que relacionarlos<br />(esta sola podr&#237;a ser la perla 4, pero no, a&#250;n hay mas)<br /><br />[yo] Primero que aunque pudi&#233;ramos especificar nosotros las claves, necesitar&#237;amos saber que Ids's hemos usado ya para generar los nuevos, lo que es m&#225;s costoso que el relacionar dos Id's. Pero adem&#225;s resulta que las claves no podemos especificarlas nosotros, en el sistema de workflow y en el de presupuestos, las claves son campos autoincrementales<br /><br />[manager] Pero hay un mecanismo en los Entity Beans que permite especificar las claves de los registros que se insertan.<br /><br />Despu&#233;s del shock empec&#233; a imaginarme el mecanismo:<br /><br />EntityBean: InsertTaskWithKey(55)<br />DataBase:SQLException:KeyViolation<br />EntityBean:QueTeHeDichoQueInsertTaskWithKey(55)<br />DataBase: Bueno Vale.<br /><br />Perla 5 - Java Word Parser<br /><br />En ocasiones los usuarios del mencionado portal de servicios suben ficheros en formato Word para que la empresa (que principalmente se dedica a la localizaci&#243;n de contenidos) los traduzca a diferentes idiomas. Se necesita estimar el coste de la traducci&#243;n autom&#225;ticamente, para entregar un presupuesto al cliente de forma inmediata. Simplemente hay que contar el n&#250;mero de palabras en el documento y multiplicarlas por el precio por palabra establecido.<br /><br />[manager] &#191;C&#243;mo podemos automatizar los presupuestos?<br /><br />[yo] Tengo que buscar alguna librer&#237;a java de parseo de archivos doc, integrarla convenientemente en el portal, y crear una funci&#243;n que me devuelva el n&#250;mero de palabras.<br /><br />[manager] Vamos a hacer algo m&#225;s r&#225;pido. Podemos reutilizar las macros de Word que tienen en el departamento de Evaluaci&#243;n.<br /><br />F&#225;cil. S&#243;lo necesitamos un "Enterprise Word Server" que pueda correr sobre Solaris, que se pueda instalar en cluster, y al que se pueda acceder por RMI.<br /><br />Espero que el mundo comprenda mi sufrimiento. Hasta la pr&#243;xima entrega<br /></blockquote></span>
